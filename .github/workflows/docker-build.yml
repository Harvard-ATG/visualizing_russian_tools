name: Publish Docker Image

on:
  release:
    types: [published]
  workflow_dispatch:
  pull_request:


jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write
      attestations: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # TODO: Re-enable QEMU setup when we need to support arm64
    #   - name: Set up QEMU
    #     uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}
          tags: |
            # Use release tag when available
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            # For PRs, use PR number
            type=ref,event=pr
            # Use short SHA
            type=sha,format=short
            # Only use latest tag on actual releases
            type=raw,value=latest

      - name: Build Docker image
        uses: docker/build-push-action@v6
        id: push
        with:
          context: .
          # TODO: Re-enable multi-platform support when Dockerfile supports arm64
          # platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Image digest
        run: echo "Digest is ${{ steps.push.outputs.digest }}"

      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v2
        with:
          subject-name: ghcr.io/${{ github.repository }}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true
