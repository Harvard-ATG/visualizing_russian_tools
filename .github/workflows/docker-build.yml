name: Docker Build and Deploy

on:
  push:
    branches:
      - master
  release:
    types: [published]
  workflow_dispatch:

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write
      attestations: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}
          tags: |
            # Use release tag when available
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            # For PRs, use PR number
            type=ref,event=pr
            # Use short SHA
            type=sha,format=short
            # Only use latest tag on actual releases
            type=raw,value=latest,enable=${{ github.event_name == 'release' }}

      - name: Build Docker image
        uses: docker/build-push-action@v6
        id: push
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Image digest
        run: echo "Digest is ${{ steps.push.outputs.digest }}"

      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v2
        with:
          subject-name: ghcr.io/${{ github.repository }}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true

  deploy-to-gcloud:
    needs: build-and-push
    if: github.event_name == 'release'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    env:
      GCP_SERVICE_NAME: visualizing-russian-tools
      GCP_REGION: us-east4
      GCP_PROJECT_ID: ${{ secrets.SUNSETTING_GCP_PROJECT_ID }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Google Auth
        id: auth
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ secrets.SUNSETTING_GCP_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.SUNSETTING_GCP_SERVICE_ACCOUNT }}

      - name: Deploy to Google Cloud
        run: |
          # Construct the image path in the run step where variable substitution works
          IMAGE_REPO="${{ env.GCP_REGION }}-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/github-upstream/harvard-atg/visualizing_russian_tools"
          # IMAGE_TAG="${{ github.event.release.tag_name }}" failing - only latest tag is appearing in Artifact Registry
          IMAGE_TAG="latest"

          gcloud run deploy ${{ env.GCP_SERVICE_NAME }} \
            --image ${IMAGE_REPO}:${IMAGE_TAG} \
            --region ${{ env.GCP_REGION }}
          echo "Deployed version `latest` (should be same as ${{ github.event.release.tag_name }}) to Google Cloud Run \
          service ${{ env.GCP_SERVICE_NAME }} in region ${{ env.GCP_REGION }}"
